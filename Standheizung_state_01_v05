// Ultrasonic sensor for diesel "low" alarm (is set to 10cm for testing)
// acoustic alarm, can be turned of wiht delay button 

///////////////////////////////////////
////   Include LCD 16x2 DISPLAY    ////
///////////////////////////////////////
#include<Wire.h>
#include<LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 20, 4);


///////////////////////////////////////
//// Constants & Vriables & States ////
///////////////////////////////////////
const int FAN_LED = 2;                      // displays aktive fan
const int DIESEL_LED = 3;                   // displays open magnetic valve for DIESEL
const int PREHEATING_LED = 4;               // displays aktive preheater
const int HEATING_LED = 5;                  // displays case HEATING
const int ERROR_LED =6;                     // desplays ERROR (blinking)
const int AKTIVE_LED = 7;                   // displays CPU-Activity
 
const int MAIN_SWITCH = 8;                  // BUTTON: On / STANDBY Main switch
const int DELAY_MAIN_SWITCH = 9;            // BUTTON: if switch is aktive, preheatingphases are on hold for manual intervention
const int TEMP_SENSOR = 10;                 // SWITCH: displays combustion chamber = hot

const int PING = 11;                        // ULTRASONIC Sensor Ping
const int ECHO = 12;                        // ULTRASONIC Sensor Ping
int duration, distance;                     // ULTRASONIC Variables for Calculation
unsigned long us_Start;                     // ULTRASONIC time stamp for testing interval

int mainSwitchState;                        // DEBOUNCING: actual Input MainSwitch
int lastmainSwitchState = LOW;              // DEBOUNCING: previous Input MainSwitch
int mainSwitchInt = 0;                      // DEBOUNCING: first State MainSwitch after Systemstart
int debounceDelay = 100;                    // DEBOUNCING: fixed delay
int acoustic = 1;                           // DEBOUNCING: int for manual off "acoustic warning" 0==on 1==off
unsigned long lastDebounceTime = 0;         // DEBOUNCING: last timestamp when main switch is used

unsigned long preheatStart;                 // PREHEATING: timestamp for millis() delays in preheating phases
unsigned long preheatDelay1 = 5000;         // PREHEATING: delay fan start up
unsigned long preheatDelay2 = 5000;        // PREHEATING: delay preheating without diesel
unsigned long preheatDelay3 = 5000;        // PREHEATING: delay preheating with diesel
unsigned long shut_downDelay = 5000;       // PREHEATING: delay preheating with diesel
unsigned long i_1 = preheatDelay1 / 1000;   // PREHEATING: 
unsigned long i_2 = preheatDelay2 / 1000;   // PREHEATING: 
unsigned long i_3 = preheatDelay3 / 1000;   // PREHEATING: 
unsigned long i_4 = shut_downDelay / 1000;  // SHUT_DOWN

unsigned long blinkStart;                   // WEIRD AKTIVITY TEST: by blinken
int blinkDelay = 200;                       // WEIRD AKTIVITY TEST: fixed delay

enum State {STANDBY, PREHEATING_1, PREHEATING_2, PREHEATING_3, HEATING_1, HEATING_2, SHUT_DOWN, ERROR};
State currentState;
State lastState = STANDBY;


void setup()
{
  lcd.init();
  pinMode (AKTIVE_LED, OUTPUT);
  pinMode (FAN_LED, OUTPUT);
  pinMode (DIESEL_LED, OUTPUT);
  pinMode (PREHEATING_LED, OUTPUT);
  pinMode (HEATING_LED, OUTPUT);
  pinMode (ERROR_LED, OUTPUT);
  pinMode (MAIN_SWITCH, INPUT_PULLUP);
  pinMode (TEMP_SENSOR, INPUT_PULLUP);    // Temp sensor (FlammenwÃ¤chter), 0 or 24 V signal
  pinMode (PING, OUTPUT);
  pinMode (ECHO, INPUT);
  pinMode (DELAY_MAIN_SWITCH, INPUT_PULLUP);
  digitalWrite(FAN_LED, LOW);
  digitalWrite(DIESEL_LED, LOW);
  digitalWrite(PREHEATING_LED, LOW);
  digitalWrite(HEATING_LED, LOW);
  digitalWrite(ERROR_LED, LOW);
  digitalWrite(AKTIVE_LED, LOW);
  lcd.backlight();
  Serial.begin(9600);
  lcd.clear(); // First screen after starting the Arduino
  lcd.setCursor(0, 0); lcd.print(">> Standby");
  // warm acoustic welcome
  tone(13, 100); delay(250); noTone(13); delay(250);
  tone(13, 200); delay(250); noTone(13); delay(250);
  tone(13, 400); delay(250); noTone(13);  
}
  
void loop(){
  
Serial.println(acoustic);
  
  // Supersonic Sensor testing for diesel
  if(millis() >= (us_Start + blinkDelay)) 
  {
    us_Start = millis();
    digitalWrite(PING, HIGH);
    delay(1);
    digitalWrite(PING, LOW);
    duration = pulseIn(ECHO, HIGH);
    distance = (duration/2) / 29.1;
      if (distance >= 10 && distance >= 5 && acoustic == 1)
      {
        tone(13, 3000);
      } 
      else
      {
        noTone(13);
      }
  }    

  // sets the acoustic warning of low diesel "off"
  if(digitalRead(DELAY_MAIN_SWITCH) == 0) 
  {
    delay(100);
    acoustic = 0;
  }
  
  
  // Weird CPU-Activity-Test :-)
  if(millis() >= (blinkStart + blinkDelay)) {
    blinkStart = millis();
      if(digitalRead(AKTIVE_LED) == LOW){digitalWrite(AKTIVE_LED, HIGH);}
      else{digitalWrite(AKTIVE_LED, LOW);}}

  // Debounce-Function with State-change 0 / 1 (safety)  
  int reading = digitalRead(MAIN_SWITCH);
  if (reading != lastmainSwitchState) {lastDebounceTime = millis();}
  if ((millis() - lastDebounceTime) > debounceDelay) {
    if (reading != mainSwitchState) {mainSwitchState = reading;
      if (mainSwitchState == LOW) {mainSwitchInt = !mainSwitchInt;}}}
  lastmainSwitchState = reading;

///////////////////////////////////////
////         Statemachine          ////
///////////////////////////////////////
  switch (currentState){

////////////////////////////////////////////////////////////////
    case STANDBY:
      if(mainSwitchInt == 1)
      {
        lcd.clear();
        lcd.setCursor(0, 0); lcd.print(">> Anlaufen");
        digitalWrite(FAN_LED, HIGH);
        digitalWrite(AKTIVE_LED, HIGH);
        preheatStart = millis();
        i_1 = preheatDelay1 / 1000;
        i_2 = preheatDelay2 / 1000;
        i_3 = preheatDelay3 / 1000;
        i_4 = shut_downDelay / 1000;
        acoustic = 1; // sets the acoustic warning of low diesel "on" again        
        currentState = PREHEATING_1; // Fan is starting up
        }
    break;

////////////////////////////////////////////////////////////////
    case PREHEATING_1:
      if(millis() - preheatStart >= 1000)
      {
        preheatStart = millis();
        i_1 = i_1-1;
        lcd.setCursor(12,1); lcd.print("   s");
        lcd.setCursor(13,1); lcd.print(i_1);
      }
      if(digitalRead(DELAY_MAIN_SWITCH) == 0)
      {
        i_1 = i_1 + 5;
        lcd.setCursor(13,1); lcd.print(i_1);        
        delay(500); // add 5 sec
        acoustic = 1; // sets the acoustic warning of low diesel "on" again
      }
      if (i_1 == 0)
      {
        currentState = PREHEATING_2; // Preheating without diesel
        lcd.clear();
        lcd.setCursor(0, 0); lcd.print(">> Vorheizen");
        lcd.setCursor(0, 1); lcd.print("Diesel aus");
        digitalWrite(PREHEATING_LED, HIGH);
        preheatStart = millis();
      }
      if(digitalRead(TEMP_SENSOR) == 0){currentState = HEATING_1;}
      if(mainSwitchInt == 0){mainSwitchInt = 1;} // Pressing of main button is not allowed      
      break;

////////////////////////////////////////////////////////////////     
    case PREHEATING_2: // preheating dry
      if(millis() - preheatStart >= 1000)
      {
        preheatStart = millis();
        i_2 = i_2-1;
        lcd.setCursor(12,1); lcd.print("   s");
        lcd.setCursor(13,1); lcd.print(i_2);
      }
      if(digitalRead(DELAY_MAIN_SWITCH) == 0)
      {
        i_2 = i_2 + 5;
        lcd.setCursor(13,1); lcd.print(i_2);        
        delay(500); // add 5 sec
        acoustic = 1; // sets the acoustic warning of low diesel "on" again
      }
      
      if (i_2 == 0)
      {
        currentState = PREHEATING_3; // Preheating with diesel
        lcd.clear();
        lcd.setCursor(0, 0); lcd.print(">> Vorheizen");
        lcd.setCursor(0, 1); lcd.print("Diesel ein");
        digitalWrite(DIESEL_LED, HIGH);      
        preheatStart = millis();
      }
      if(digitalRead(TEMP_SENSOR) == 0){currentState = HEATING_1;}
      if(mainSwitchInt == 0){mainSwitchInt = 1;} // Pressing of main button is not allowed  
    break;

////////////////////////////////////////////////////////////////       
    case PREHEATING_3: // preheating wet
      if(millis() - preheatStart >= 1000)
      {
        preheatStart = millis();
        i_3 = i_3-1;
        lcd.setCursor(12,1); lcd.print("   s");
        lcd.setCursor(13,1); lcd.print(i_3);
      }
      if(digitalRead(DELAY_MAIN_SWITCH) == 0)
      {
        i_3 = i_3 + 5;
        lcd.setCursor(13,1); lcd.print(i_3);        
        delay(500); // add 5 sec
        acoustic = 1; // sets the acoustic warning of low diesel "on" again
      }
      if (i_3 == 0)
      {
        digitalWrite(FAN_LED, LOW);
        digitalWrite(DIESEL_LED, LOW);  
        digitalWrite(PREHEATING_LED, LOW);      
        lcd.clear();
        lcd.setCursor(0,0); lcd.print(">> FEHLER");
        currentState = ERROR;
      } 
      if(digitalRead(TEMP_SENSOR) == 0){currentState = HEATING_1;}
      if(mainSwitchInt == 0){mainSwitchInt = 1;} // Pressing of main button is not allowed  
    break;

////////////////////////////////////////////////////////////////
    case HEATING_1:
      lcd.clear();
      lcd.setCursor(0, 0);lcd.print(">> Heizen");
      lcd.setCursor(0, 1);lcd.print("Diesel ein");
      digitalWrite(PREHEATING_LED, LOW);
      digitalWrite(HEATING_LED, HIGH); 
      digitalWrite(DIESEL_LED, HIGH);        
      currentState = HEATING_2;
    break;

////////////////////////////////////////////////////////////////
    case HEATING_2: 
      if(mainSwitchInt == 0)
      {
        digitalWrite(DIESEL_LED, LOW);
        lcd.clear();
        lcd.setCursor(0,0); lcd.print(">> Abschalten");
        lcd.setCursor(0,1); lcd.print("warte...");
        preheatStart = millis();
        currentState = SHUT_DOWN;
      }
      if(digitalRead(TEMP_SENSOR) == 1) // temp is low!
      {
        lcd.clear();
        lcd.setCursor(0,0); lcd.print(">> FEHLER");
        digitalWrite(FAN_LED, LOW);
        digitalWrite(DIESEL_LED, LOW);  
        digitalWrite(HEATING_LED, LOW);
        currentState = ERROR;
      }
      break;
    
////////////////////////////////////////////////////////////////
    case SHUT_DOWN:
      if(digitalRead(TEMP_SENSOR) == 1)
      {
        digitalWrite(HEATING_LED, LOW);
        
        if(millis() - preheatStart >= 1000)
        {
          preheatStart = millis();
          i_4 = i_4-1;
          lcd.setCursor(12,1); lcd.print("   s");
          lcd.setCursor(13,1); lcd.print(i_4);
        }
        if (i_4 == 0)
        {
          lcd.clear(); 
          lcd.setCursor(0, 0); lcd.print(">> Standby");
          digitalWrite(FAN_LED, LOW);
          mainSwitchInt = 0; // if main button is pressed during shut_down
          currentState = STANDBY;
        } 
      }
    break;

////////////////////////////////////////////////////////////////
    case ERROR:
      if(digitalRead(AKTIVE_LED) == HIGH)
      {
        digitalWrite(ERROR_LED, LOW);
      }
      else
      {
        digitalWrite(ERROR_LED, HIGH);
      }
      
      if(mainSwitchInt == 0)
      {
        lcd.clear();
        lcd.setCursor(0, 0); lcd.print(">> Standby");
        mainSwitchInt = 0; // if main button is pressed during ERROR
        digitalWrite(ERROR_LED, LOW);
        currentState = STANDBY;
      } 
      break;
  }
}






